# -*- coding: utf-8 -*-
"""A-8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15MBs-f-F6qRobcTNiCiNK2yDK-6Sr8ZT

***Title: Data Visualization-I***
1. Use the inbuilt dataset 'titanic'. The dataset contains 891 rows and contains information about 
the passengers who boarded the unfortunate Titanic ship. Use the Seaborn library to see if we can 
find any patterns in the data.
2. Write a code to check how the price of the ticket (column name: 'fare') for each passenger is 
distributed by plotting a histogram.
"""

# imports
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from warnings import filterwarnings
filterwarnings('ignore')

titanic = pd.read_csv('titanic.csv')
print(titanic.head())

# Getting informatio  about the dataset
titanic.info()

# Getting the mean, median and std of the dataset using describe()
titanic.describe()

# making a heatmap of the data using seaborn library

# Syntax of heatmap
# titanic.isnull() - to convert all the values to boolean so as to plot the values in the heatmap
# sns.heatmap(dataset, vmin;vmax, cmap(color of the map), yticklabels;xticklabels(to show labels or not), cbar(colorbar))
sns.heatmap(titanic.isnull(), cbar=False, yticklabels=False, cmap='viridis')

# cmap colors = YlGnBu(YellowGreenBlue), Greens, Blues, BuPu(blues and purples)

# Drop the NaN values from the Age column for Age column
# titanic['Age'].dropna()

# distplot() or distribution plot(depicts the variation in the data distribution.)
# dropna() to drop all the null values
# bins is the number of bars
# kde is the gaussian kernel density estimate(line)
sns.distplot(titanic['Fare'].dropna(), bins=30, kde=False, color='green')

# hist() or Histogram for Age column
# bins is number of bars
# alpha is the transparency of the histogram
titanic['Age'].hist(bins=20, alpha=0.7, color='darkred', figsize=(8,5))

# histogram for Fare column
titanic['Fare'].hist(bins=20, color='green', figsize=(7,5))

# countplot() - Show the counts of observations in each categorical bin using bars. for Age
sns.set_style('whitegrid')
# data is the data which we have to input
# x is the column which we have to display on the X axis
# hue takes the column name for colour encoding. 
# palette takes colors to use the different levels of hue for count
sns.countplot(data=titanic, x='Age', hue="Pclass", palette ='rainbow')

# countplot for SibSp
sns.countplot(data = titanic, x='SibSp')